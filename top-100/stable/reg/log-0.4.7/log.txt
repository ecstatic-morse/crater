[INFO] fetching crate log 0.4.7...
[INFO] extracting crate log 0.4.7 into work\ex\default\sources\stable\reg\log\0.4.7
[INFO] extracting crate log 0.4.7 into work\ex\default\sources\beta\reg\log\0.4.7
[INFO] validating manifest of log-0.4.7 on toolchain stable
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+stable" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] validating manifest of log-0.4.7 on toolchain beta
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+beta" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] started frobbing log-0.4.7
[INFO] removed 1 missing tests
[INFO] finished frobbing log-0.4.7
[INFO] frobbed toml for log-0.4.7 written to work\ex\default\sources\stable\reg\log\0.4.7\Cargo.toml
[INFO] started frobbing log-0.4.7
[INFO] removed 1 missing tests
[INFO] finished frobbing log-0.4.7
[INFO] frobbed toml for log-0.4.7 written to work\ex\default\sources\beta\reg\log\0.4.7\Cargo.toml
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+stable" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+beta" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+stable" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+beta" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] testing log-0.4.7 against stable for default
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-0\\stable,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\stable\\reg\\log\\0.4.7,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "USER_ID=0" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "MAP_USER_ID=0" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=forbid" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+stable" "build" "--frozen"`
[INFO] [stdout] cdc7ccd0bb9bbadcf8cbd943205f04b5b03bb1fea1c15bad5d0d53df0b953f3e
[INFO] running `"docker" "start" "-a" "cdc7ccd0bb9bbadcf8cbd943205f04b5b03bb1fea1c15bad5d0d53df0b953f3e"`
[INFO] [stderr] warning: An explicit [[test]] section is specified in Cargo.toml which currently
[INFO] [stderr] disables Cargo from automatically inferring other test targets.
[INFO] [stderr] This inference behavior will change in the Rust 2018 edition and the following
[INFO] [stderr] files will be included as a test target:
[INFO] [stderr] 
[INFO] [stderr] * C:\crater\workdir\tests\filters.rs
[INFO] [stderr] 
[INFO] [stderr] This is likely to break cargo build or cargo test as these files may not be
[INFO] [stderr] ready to be compiled as a test target today. You can future-proof yourself
[INFO] [stderr] and disable this warning by adding `autotests = false` to your [package]
[INFO] [stderr] section. You may also move the files to a location where Cargo would not
[INFO] [stderr] automatically infer them to be a target, such as in subfolders.
[INFO] [stderr] 
[INFO] [stderr] For more information on this warning you can consult
[INFO] [stderr] https://github.com/rust-lang/cargo/issues/5330
[INFO] [stderr]    Compiling log v0.4.7 (C:\crater\workdir)
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 6.89s
[INFO] running `"docker" "inspect" "cdc7ccd0bb9bbadcf8cbd943205f04b5b03bb1fea1c15bad5d0d53df0b953f3e"`
[INFO] running `"docker" "rm" "-f" "cdc7ccd0bb9bbadcf8cbd943205f04b5b03bb1fea1c15bad5d0d53df0b953f3e"`
[INFO] [stdout] cdc7ccd0bb9bbadcf8cbd943205f04b5b03bb1fea1c15bad5d0d53df0b953f3e
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-0\\stable,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\stable\\reg\\log\\0.4.7,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "USER_ID=0" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "MAP_USER_ID=0" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=forbid" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+stable" "test" "--frozen" "--no-run"`
[INFO] [stdout] a0ea80bcbec2e83df3cf4bf7a9f2bd77af7f4802fde7ab4c0e97a6e4a99e4402
[INFO] running `"docker" "start" "-a" "a0ea80bcbec2e83df3cf4bf7a9f2bd77af7f4802fde7ab4c0e97a6e4a99e4402"`
[INFO] [stderr] warning: An explicit [[test]] section is specified in Cargo.toml which currently
[INFO] [stderr] disables Cargo from automatically inferring other test targets.
[INFO] [stderr] This inference behavior will change in the Rust 2018 edition and the following
[INFO] [stderr] files will be included as a test target:
[INFO] [stderr] 
[INFO] [stderr] * C:\crater\workdir\tests\filters.rs
[INFO] [stderr] 
[INFO] [stderr] This is likely to break cargo build or cargo test as these files may not be
[INFO] [stderr] ready to be compiled as a test target today. You can future-proof yourself
[INFO] [stderr] and disable this warning by adding `autotests = false` to your [package]
[INFO] [stderr] section. You may also move the files to a location where Cargo would not
[INFO] [stderr] automatically infer them to be a target, such as in subfolders.
[INFO] [stderr] 
[INFO] [stderr] For more information on this warning you can consult
[INFO] [stderr] https://github.com/rust-lang/cargo/issues/5330
[INFO] [stderr]    Compiling log v0.4.7 (C:\crater\workdir)
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 4.47s
[INFO] running `"docker" "inspect" "a0ea80bcbec2e83df3cf4bf7a9f2bd77af7f4802fde7ab4c0e97a6e4a99e4402"`
[INFO] running `"docker" "rm" "-f" "a0ea80bcbec2e83df3cf4bf7a9f2bd77af7f4802fde7ab4c0e97a6e4a99e4402"`
[INFO] [stdout] a0ea80bcbec2e83df3cf4bf7a9f2bd77af7f4802fde7ab4c0e97a6e4a99e4402
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-0\\stable,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\stable\\reg\\log\\0.4.7,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "USER_ID=0" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "MAP_USER_ID=0" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=forbid" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+stable" "test" "--frozen"`
[INFO] [stdout] 624e2bca062ff9fb7acc7d098c9068160ee6b3c06ec27fd6debbe6ff11c3e1c8
[INFO] running `"docker" "start" "-a" "624e2bca062ff9fb7acc7d098c9068160ee6b3c06ec27fd6debbe6ff11c3e1c8"`
[INFO] [stderr] warning: An explicit [[test]] section is specified in Cargo.toml which currently
[INFO] [stderr] disables Cargo from automatically inferring other test targets.
[INFO] [stderr] This inference behavior will change in the Rust 2018 edition and the following
[INFO] [stderr] files will be included as a test target:
[INFO] [stderr] 
[INFO] [stderr] * C:\crater\workdir\tests\filters.rs
[INFO] [stderr] 
[INFO] [stderr] This is likely to break cargo build or cargo test as these files may not be
[INFO] [stderr] ready to be compiled as a test target today. You can future-proof yourself
[INFO] [stderr] and disable this warning by adding `autotests = false` to your [package]
[INFO] [stderr] section. You may also move the files to a location where Cargo would not
[INFO] [stderr] automatically infer them to be a target, such as in subfolders.
[INFO] [stderr] 
[INFO] [stderr] For more information on this warning you can consult
[INFO] [stderr] https://github.com/rust-lang/cargo/issues/5330
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 0.30s
[INFO] [stderr]      Running C:\crater\target\debug\deps\log-18388165aacd2b1f.exe
[INFO] [stdout] 
[INFO] [stdout] running 13 tests
[INFO] [stdout] test tests::test_cross_cmp ... ok
[INFO] [stdout] test tests::test_cross_eq ... ok
[INFO] [stdout] test tests::test_level_from_str ... ok
[INFO] [stdout] test tests::test_level_show ... ok
[INFO] [stdout] test tests::test_levelfilter_from_str ... ok
[INFO] [stdout] test tests::test_levelfilter_show ... ok
[INFO] [stdout] test tests::test_metadata_builder ... ok
[INFO] [stdout] test tests::test_metadata_convenience_builder ... ok
[INFO] [stdout] test tests::test_record_builder ... ok
[INFO] [stdout] test tests::test_record_complete_builder ... ok
[INFO] [stdout] test tests::test_record_convenience_builder ... ok
[INFO] [stdout] test tests::test_to_level_filter ... ok
[INFO] [stdout] test tests::test_to_level ... ok
[INFO] [stdout] 
[INFO] [stdout] test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out
[INFO] [stdout] 
[INFO] [stderr]    Doc-tests log
[INFO] [stdout] 
[INFO] [stdout] running 0 tests
[INFO] [stdout] 
[INFO] [stdout] test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out
[INFO] [stdout] 
[INFO] running `"docker" "inspect" "624e2bca062ff9fb7acc7d098c9068160ee6b3c06ec27fd6debbe6ff11c3e1c8"`
[INFO] running `"docker" "rm" "-f" "624e2bca062ff9fb7acc7d098c9068160ee6b3c06ec27fd6debbe6ff11c3e1c8"`
[INFO] [stdout] 624e2bca062ff9fb7acc7d098c9068160ee6b3c06ec27fd6debbe6ff11c3e1c8
