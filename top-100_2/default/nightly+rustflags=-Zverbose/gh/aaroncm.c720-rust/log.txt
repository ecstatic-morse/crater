[INFO] cloning repository aaroncm/c720-rust
[INFO] running `"git" "clone" "--bare" "git://github.com/aaroncm/c720-rust.git" "work\\cache\\sources\\gh\\aaroncm\\c720-rust"`
[INFO] [stderr] Cloning into bare repository 'work\cache\sources\gh\aaroncm\c720-rust'...
[INFO] running `"git" "clone" "work\\cache\\sources\\gh\\aaroncm\\c720-rust" "work\\ex\\default\\sources\\nightly\\gh\\aaroncm\\c720-rust"`
[INFO] [stderr] Cloning into 'work\ex\default\sources\nightly\gh\aaroncm\c720-rust'...
[INFO] [stderr] done.
[INFO] running `"git" "clone" "work\\cache\\sources\\gh\\aaroncm\\c720-rust" "work\\ex\\default\\sources\\nightly+rustflags=-Zverbose\\gh\\aaroncm\\c720-rust"`
[INFO] [stderr] Cloning into 'work\ex\default\sources\nightly+rustflags=-Zverbose\gh\aaroncm\c720-rust'...
[INFO] [stderr] done.
[INFO] running `"git" "rev-parse" "HEAD"`
[INFO] [stdout] 1d7ac46ccb0d697fa40800022b34b2da41c496e4
[INFO] sha for GitHub repo aaroncm/c720-rust: 1d7ac46ccb0d697fa40800022b34b2da41c496e4
[INFO] validating manifest of aaroncm/c720-rust on toolchain nightly
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] validating manifest of aaroncm/c720-rust on toolchain nightly+rustflags=-Zverbose
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] started frobbing aaroncm/c720-rust
[INFO] finished frobbing aaroncm/c720-rust
[INFO] frobbed toml for aaroncm/c720-rust written to work\ex\default\sources\nightly\gh\aaroncm\c720-rust\Cargo.toml
[INFO] started frobbing aaroncm/c720-rust
[INFO] finished frobbing aaroncm/c720-rust
[INFO] frobbed toml for aaroncm/c720-rust written to work\ex\default\sources\nightly+rustflags=-Zverbose\gh\aaroncm\c720-rust\Cargo.toml
[INFO] crate aaroncm/c720-rust already has a lockfile, it will not be regenerated
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] [stderr]  Downloading crates ...
[INFO] [stderr]   Downloaded serde_json v1.0.22
[INFO] [stderr]   Downloaded regex v0.2.10
[INFO] [stderr]   Downloaded indicatif v0.8.0
[INFO] [stderr]   Downloaded parking_lot_core v0.2.13
[INFO] [stderr]   Downloaded regex-syntax v0.5.3
[INFO] [stderr]   Downloaded rayon v0.9.0
[INFO] [stderr]   Downloaded console v0.6.1
[INFO] [stderr]   Downloaded parking_lot v0.5.4
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] testing aaroncm/c720-rust against nightly+rustflags=-Zverbose for default
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-3\\nightly+rustflags=-Zverbose,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\nightly+rustflags=-Zverbose\\gh\\aaroncm\\c720-rust,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=allow -Zverbose" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+nightly" "build" "--frozen"`
[INFO] [stdout] cdb52a05d77b5c6900a790a359cd95c27c784da1ef476994e9d430759ac922de
[INFO] running `"docker" "start" "-a" "cdb52a05d77b5c6900a790a359cd95c27c784da1ef476994e9d430759ac922de"`
[INFO] [stderr]    Compiling winapi v0.3.4
[INFO] [stderr]    Compiling libc v0.2.40
[INFO] [stderr]    Compiling cfg-if v0.1.2
[INFO] [stderr]    Compiling regex v0.2.10
[INFO] [stderr]    Compiling stable_deref_trait v1.0.0
[INFO] [stderr]    Compiling smallvec v0.6.0
[INFO] [stderr]    Compiling serde v1.0.70
[INFO] [stderr]    Compiling itoa v0.4.2
[INFO] [stderr]    Compiling dtoa v0.4.3
[INFO] [stderr]    Compiling regex-syntax v0.5.3
[INFO] [stderr]    Compiling crossbeam-utils v0.2.2
[INFO] [stderr]    Compiling memchr v2.0.1
[INFO] [stderr]    Compiling num_cpus v1.8.0
[INFO] [stderr]    Compiling owning_ref v0.3.3
[INFO] [stderr]    Compiling crossbeam-epoch v0.3.1
[INFO] [stderr]    Compiling aho-corasick v0.6.4
[INFO] [stderr]    Compiling crossbeam-deque v0.2.0
[INFO] [stderr]    Compiling rand v0.4.2
[INFO] [stderr]    Compiling clicolors-control v0.2.0
[INFO] [stderr]    Compiling parking_lot_core v0.2.13
[INFO] [stderr]    Compiling rayon-core v1.4.0
[INFO] [stderr]    Compiling serde_json v1.0.22
[INFO] [stderr]    Compiling parking_lot v0.5.4
[INFO] [stderr]    Compiling rayon v0.9.0
[INFO] [stderr]    Compiling console v0.6.1
[INFO] [stderr]    Compiling indicatif v0.8.0
[INFO] [stderr]    Compiling c720 v0.2.0 (C:\crater\workdir)
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 1m 08s
[INFO] running `"docker" "inspect" "cdb52a05d77b5c6900a790a359cd95c27c784da1ef476994e9d430759ac922de"`
[INFO] running `"docker" "rm" "-f" "cdb52a05d77b5c6900a790a359cd95c27c784da1ef476994e9d430759ac922de"`
[INFO] [stdout] cdb52a05d77b5c6900a790a359cd95c27c784da1ef476994e9d430759ac922de
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-3\\nightly+rustflags=-Zverbose,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\nightly+rustflags=-Zverbose\\gh\\aaroncm\\c720-rust,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=allow -Zverbose" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+nightly" "test" "--frozen" "--no-run"`
[INFO] [stdout] 3fb35cca5cadfe02c0ab06af495f979ab2efcbcd33b6a4bac75b9dc0bb2bb0a3
[INFO] running `"docker" "start" "-a" "3fb35cca5cadfe02c0ab06af495f979ab2efcbcd33b6a4bac75b9dc0bb2bb0a3"`
[INFO] [stderr]    Compiling c720 v0.2.0 (C:\crater\workdir)
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 3.81s
[INFO] running `"docker" "inspect" "3fb35cca5cadfe02c0ab06af495f979ab2efcbcd33b6a4bac75b9dc0bb2bb0a3"`
[INFO] running `"docker" "rm" "-f" "3fb35cca5cadfe02c0ab06af495f979ab2efcbcd33b6a4bac75b9dc0bb2bb0a3"`
[INFO] [stdout] 3fb35cca5cadfe02c0ab06af495f979ab2efcbcd33b6a4bac75b9dc0bb2bb0a3
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-3\\nightly+rustflags=-Zverbose,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\nightly+rustflags=-Zverbose\\gh\\aaroncm\\c720-rust,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=allow -Zverbose" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+nightly" "test" "--frozen"`
[INFO] [stdout] f833fa43c14276cfb09540c4fe56b85453bc50ad8f87006a9a8530e93d1b5c0b
[INFO] running `"docker" "start" "-a" "f833fa43c14276cfb09540c4fe56b85453bc50ad8f87006a9a8530e93d1b5c0b"`
[INFO] [stderr]     Blocking waiting for file lock on package cache
[INFO] [stderr]     Finished dev [unoptimized + debuginfo] target(s) in 7.32s
[INFO] [stderr]      Running C:\crater\target\debug\deps\c720-7c97fd0e03e55d3c.exe
[INFO] [stdout] 
[INFO] [stdout] running 0 tests
[INFO] [stdout] 
[INFO] [stdout] test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out
[INFO] [stdout] 
[INFO] running `"docker" "inspect" "f833fa43c14276cfb09540c4fe56b85453bc50ad8f87006a9a8530e93d1b5c0b"`
[INFO] running `"docker" "rm" "-f" "f833fa43c14276cfb09540c4fe56b85453bc50ad8f87006a9a8530e93d1b5c0b"`
[INFO] [stdout] f833fa43c14276cfb09540c4fe56b85453bc50ad8f87006a9a8530e93d1b5c0b
