[INFO] fetching crate shipcat 0.66.0...
[INFO] extracting crate shipcat 0.66.0 into work\ex\default\sources\nightly\reg\shipcat\0.66.0
[INFO] extracting crate shipcat 0.66.0 into work\ex\default\sources\nightly+rustflags=-Zverbose\reg\shipcat\0.66.0
[INFO] validating manifest of shipcat-0.66.0 on toolchain nightly
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] validating manifest of shipcat-0.66.0 on toolchain nightly+rustflags=-Zverbose
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] started frobbing shipcat-0.66.0
[INFO] finished frobbing shipcat-0.66.0
[INFO] frobbed toml for shipcat-0.66.0 written to work\ex\default\sources\nightly\reg\shipcat\0.66.0\Cargo.toml
[INFO] started frobbing shipcat-0.66.0
[INFO] finished frobbing shipcat-0.66.0
[INFO] frobbed toml for shipcat-0.66.0 written to work\ex\default\sources\nightly+rustflags=-Zverbose\reg\shipcat\0.66.0\Cargo.toml
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] [stderr]     Blocking waiting for file lock on package cache
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] [stderr]  Downloading crates ...
[INFO] [stderr]   Downloaded tera v0.11.20
[INFO] [stderr]   Downloaded unic-ucd-version v0.7.0
[INFO] [stderr]   Downloaded unic-char-range v0.7.0
[INFO] [stderr]   Downloaded unic-ucd-segment v0.7.0
[INFO] [stderr]   Downloaded slug v0.1.4
[INFO] [stderr]   Downloaded pest_meta v2.1.1
[INFO] [stderr]   Downloaded unic-common v0.7.0
[INFO] [stderr]   Downloaded ucd-trie v0.1.2
[INFO] [stderr]   Downloaded urlencoding v1.0.0
[INFO] [stderr]   Downloaded cargo_metadata v0.6.4
[INFO] [stderr]   Downloaded slack-hook-clux v0.7.1
[INFO] [stderr]   Downloaded unic-segment v0.7.0
[INFO] [stderr]   Downloaded unic-char-property v0.7.0
[INFO] [stderr]   Downloaded deunicode v0.4.3
[INFO] [stderr]   Downloaded pest v2.1.1
[INFO] [stderr]   Downloaded bytecount v0.4.0
[INFO] [stderr]   Downloaded skeptic v0.13.4
[INFO] [stderr]   Downloaded pulldown-cmark v0.2.0
[INFO] [stderr]   Downloaded loggerv v0.7.1
[INFO] [stderr]   Downloaded jenkins_api v0.5.2
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] testing shipcat-0.66.0 against nightly for default
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-0\\nightly,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\nightly\\reg\\shipcat\\0.66.0,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=allow" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+nightly" "build" "--frozen"`
[INFO] [stdout] e90bc6c32337cb15be7171b888440c795b44d6fb578398d7867cd918d0eecafe
[INFO] running `"docker" "start" "-a" "e90bc6c32337cb15be7171b888440c795b44d6fb578398d7867cd918d0eecafe"`
[INFO] [stderr]    Compiling syn v0.15.40
[INFO] [stderr]    Compiling serde v1.0.97
[INFO] [stderr]    Compiling winapi v0.3.7
[INFO] [stderr]    Compiling ryu v1.0.0
[INFO] [stderr]    Compiling ucd-util v0.1.5
[INFO] [stderr]    Compiling pulldown-cmark v0.2.0
[INFO] [stderr]    Compiling ucd-trie v0.1.2
[INFO] [stderr]    Compiling utf8-ranges v1.0.3
[INFO] [stderr]    Compiling unic-char-range v0.7.0
[INFO] [stderr]    Compiling maplit v1.0.1
[INFO] [stderr]    Compiling bytecount v0.4.0
[INFO] [stderr]    Compiling glob v0.2.11
[INFO] [stderr]    Compiling unic-common v0.7.0
[INFO] [stderr]    Compiling deunicode v0.4.3
[INFO] [stderr]    Compiling urlencoding v1.0.0
[INFO] [stderr]    Compiling fixedbitset v0.1.9
[INFO] [stderr]    Compiling ordermap v0.3.5
[INFO] [stderr]    Compiling humansize v1.1.0
[INFO] [stderr]    Compiling hex v0.2.0
[INFO] [stderr]    Compiling openssl-probe v0.1.2
[INFO] [stderr]    Compiling num-traits v0.2.8
[INFO] [stderr]    Compiling num-integer v0.1.41
[INFO] [stderr]    Compiling backtrace-sys v0.1.31
[INFO] [stderr]    Compiling miniz_oxide_c_api v0.2.2
[INFO] [stderr]    Compiling tokio-sync v0.1.6
[INFO] [stderr]    Compiling miniz_oxide v0.2.3
[INFO] [stderr]    Compiling regex-syntax v0.6.10
[INFO] [stderr]    Compiling pest v2.1.1
[INFO] [stderr]    Compiling unic-char-property v0.7.0
[INFO] [stderr]    Compiling unic-ucd-version v0.7.0
[INFO] [stderr]    Compiling slug v0.1.4
[INFO] [stderr]    Compiling thread_local v0.3.6
[INFO] [stderr]    Compiling idna v0.1.5
[INFO] [stderr]    Compiling unic-ucd-segment v0.7.0
[INFO] [stderr]    Compiling quote v0.6.13
[INFO] [stderr]    Compiling bytes v0.4.12
[INFO] [stderr]    Compiling base64 v0.10.1
[INFO] [stderr]    Compiling base64 v0.9.3
[INFO] [stderr]    Compiling want v0.2.0
[INFO] [stderr]    Compiling tokio-executor v0.1.8
[INFO] [stderr]    Compiling crossbeam-queue v0.1.2
[INFO] [stderr]    Compiling pest_meta v2.1.1
[INFO] [stderr]    Compiling aho-corasick v0.7.4
[INFO] [stderr]    Compiling unic-segment v0.7.0
[INFO] [stderr]    Compiling url v1.7.2
[INFO] [stderr]    Compiling tokio-io v0.1.12
[INFO] [stderr]    Compiling string v0.2.1
[INFO] [stderr]    Compiling tokio-buf v0.1.1
[INFO] [stderr]    Compiling http v0.1.17
[INFO] [stderr]    Compiling futures-cpupool v0.1.8
[INFO] [stderr]    Compiling threadpool v1.7.1
[INFO] [stderr]    Compiling crossbeam-deque v0.7.1
[INFO] [stderr]    Compiling tokio-timer v0.2.11
[INFO] [stderr]    Compiling tokio-current-thread v0.1.6
[INFO] [stderr]    Compiling regex v1.2.0
[INFO] [stderr]    Compiling flate2 v1.0.9
[INFO] [stderr]    Compiling rand_jitter v0.1.4
[INFO] [stderr]    Compiling rand_os v0.1.3
[INFO] [stderr]    Compiling net2 v0.2.33
[INFO] [stderr]    Compiling winapi-util v0.1.2
[INFO] [stderr]    Compiling rand v0.4.6
[INFO] [stderr]    Compiling remove_dir_all v0.5.2
[INFO] [stderr]    Compiling time v0.1.42
[INFO] [stderr]    Compiling schannel v0.1.15
[INFO] [stderr]    Compiling winreg v0.6.1
[INFO] [stderr]    Compiling atty v0.2.13
[INFO] [stderr]    Compiling ansi_term v0.11.0
[INFO] [stderr]    Compiling dirs v1.0.5
[INFO] [stderr]    Compiling backtrace v0.3.33
[INFO] [stderr]    Compiling h2 v0.1.25
[INFO] [stderr]    Compiling http-body v0.1.0
[INFO] [stderr]    Compiling rand v0.6.5
[INFO] [stderr]    Compiling same-file v1.0.5
[INFO] [stderr]    Compiling miow v0.2.1
[INFO] [stderr]    Compiling serde_derive v1.0.97
[INFO] [stderr]    Compiling synstructure v0.10.2
[INFO] [stderr]    Compiling pest_generator v2.1.0
[INFO] [stderr]    Compiling cookie v0.12.0
[INFO] [stderr]    Compiling tempdir v0.3.7
[INFO] [stderr]    Compiling clap v2.33.0
[INFO] [stderr]    Compiling native-tls v0.2.3
[INFO] [stderr]    Compiling loggerv v0.7.1
[INFO] [stderr]    Compiling error-chain v0.12.1
[INFO] [stderr]    Compiling error-chain v0.11.0
[INFO] [stderr]    Compiling walkdir v2.2.9
[INFO] [stderr]    Compiling phf_generator v0.7.24
[INFO] [stderr]    Compiling tokio-threadpool v0.1.15
[INFO] [stderr]    Compiling uuid v0.7.4
[INFO] [stderr]    Compiling mio v0.6.19
[INFO] [stderr]    Compiling failure_derive v0.1.5
[INFO] [stderr]    Compiling pest_derive v2.1.0
[INFO] [stderr]    Compiling publicsuffix v1.5.2
[INFO] [stderr]    Compiling phf_codegen v0.7.24
[INFO] [stderr]    Compiling failure v0.1.5
[INFO] [stderr]    Compiling mime_guess v2.0.0-alpha.6
[INFO] [stderr]    Compiling semver v0.9.0
[INFO] [stderr]    Compiling serde_json v1.0.40
[INFO] [stderr]    Compiling serde_urlencoded v0.5.5
[INFO] [stderr]    Compiling url_serde v0.2.0
[INFO] [stderr]    Compiling chrono v0.4.7
[INFO] [stderr]    Compiling serde_yaml v0.8.9
[INFO] [stderr]    Compiling petgraph v0.4.13
[INFO] [stderr]    Compiling rustc_version v0.2.3
[INFO] [stderr]    Compiling cargo_metadata v0.6.4
[INFO] [stderr]    Compiling cookie_store v0.7.0
[INFO] [stderr]    Compiling tera v0.11.20
[INFO] [stderr]    Compiling parking_lot_core v0.4.0
[INFO] [stderr]    Compiling hyper v0.12.33
[INFO] [stderr]    Compiling skeptic v0.13.4
[INFO] [stderr]    Compiling parking_lot v0.7.1
[INFO] [stderr]    Compiling jenkins_api v0.5.2
[INFO] [stderr]    Compiling tokio-reactor v0.1.9
[INFO] [stderr]    Compiling tokio-tcp v0.1.3
[INFO] [stderr]    Compiling tokio v0.1.22
[INFO] [stderr]    Compiling hyper-tls v0.3.2
[INFO] [stderr]    Compiling reqwest v0.9.19
[INFO] [stderr]    Compiling slack-hook-clux v0.7.1
[INFO] [stderr]    Compiling shipcat v0.66.0 (C:\crater\workdir)
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src/lib.rs:215:34
[INFO] [stderr]     |
[INFO] [stderr] 215 |         env::set_current_dir(pth)?;
[INFO] [stderr]     |                                  ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\vault.rs:24:41
[INFO] [stderr]    |
[INFO] [stderr] 24 |             let mut f = File::open(path)?;
[INFO] [stderr]    |                                         ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\vault.rs:26:41
[INFO] [stderr]    |
[INFO] [stderr] 26 |             f.read_to_string(&mut token)?;
[INFO] [stderr]    |                                         ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\vault.rs:143:38
[INFO] [stderr]     |
[INFO] [stderr] 143 |         res.read_to_string(&mut body)?;
[INFO] [stderr]     |                                      ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\vault.rs:169:38
[INFO] [stderr]     |
[INFO] [stderr] 169 |         res.read_to_string(&mut body)?;
[INFO] [stderr]     |                                      ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\config.rs:392:39
[INFO] [stderr]     |
[INFO] [stderr] 392 |         let mut f = File::open(&mpath)?;
[INFO] [stderr]     |                                       ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\config.rs:394:36
[INFO] [stderr]     |
[INFO] [stderr] 394 |         f.read_to_string(&mut data)?;
[INFO] [stderr]     |                                    ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\manifest\filebacked.rs:44:39
[INFO] [stderr]    |
[INFO] [stderr] 44 |         let mut f = File::open(&mpath)?;
[INFO] [stderr]    |                                       ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\manifest\filebacked.rs:46:36
[INFO] [stderr]    |
[INFO] [stderr] 46 |         f.read_to_string(&mut data)?;
[INFO] [stderr]    |                                    ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\manifest\filebacked.rs:149:47
[INFO] [stderr]     |
[INFO] [stderr] 149 |             let mut f = File::open(&envlocals)?;
[INFO] [stderr]     |                                               ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\manifest\filebacked.rs:151:40
[INFO] [stderr]     |
[INFO] [stderr] 151 |             f.read_to_string(&mut data)?;
[INFO] [stderr]     |                                        ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\manifest\template.rs:64:38
[INFO] [stderr]    |
[INFO] [stderr] 64 |         let mut f = File::open(&tpth)?;
[INFO] [stderr]    |                                      ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\manifest\template.rs:66:36
[INFO] [stderr]    |
[INFO] [stderr] 66 |         f.read_to_string(&mut data)?;
[INFO] [stderr]    |                                    ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\product\product.rs:151:39
[INFO] [stderr]     |
[INFO] [stderr] 151 |         let mut f = File::open(&mpath)?;
[INFO] [stderr]     |                                       ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\product\product.rs:153:36
[INFO] [stderr]     |
[INFO] [stderr] 153 |         f.read_to_string(&mut data)?;
[INFO] [stderr]     |                                    ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\product\merge.rs:34:37
[INFO] [stderr]    |
[INFO] [stderr] 34 |         let mut f = File::open(&pth)?;
[INFO] [stderr]    |                                     ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\product\merge.rs:36:36
[INFO] [stderr]    |
[INFO] [stderr] 36 |         f.read_to_string(&mut data)?;
[INFO] [stderr]    |                                    ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]  --> src\kube.rs:9:57
[INFO] [stderr]   |
[INFO] [stderr] 9 |     let s = Command::new("kubectl").args(&args).status()?;
[INFO] [stderr]   |                                                         ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]   |
[INFO] [stderr]   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]   = help: the following implementations were found:
[INFO] [stderr]             <Error as std::convert::From<&'a str>>
[INFO] [stderr]             <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]             <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]             <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]           and 9 others
[INFO] [stderr]   = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\kube.rs:18:57
[INFO] [stderr]    |
[INFO] [stderr] 18 |     let s = Command::new("kubectl").args(&args).output()?;
[INFO] [stderr]    |                                                         ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\helm\direct.rs:342:39
[INFO] [stderr]     |
[INFO] [stderr] 342 |         let mut f = File::create(&pth)?;
[INFO] [stderr]     |                                       ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\helm\direct.rs:343:35
[INFO] [stderr]     |
[INFO] [stderr] 343 |         write!(f, "{}\n", encoded)?;
[INFO] [stderr]     |                                   ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\helm\direct.rs:388:39
[INFO] [stderr]     |
[INFO] [stderr] 388 |         let mut f = File::create(&pth)?;
[INFO] [stderr]     |                                       ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\helm\direct.rs:389:31
[INFO] [stderr]     |
[INFO] [stderr] 389 |         write!(f, "{}\n", tpl)?;
[INFO] [stderr]     |                               ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\helm\direct.rs:394:27
[INFO] [stderr]     |
[INFO] [stderr] 394 |     fs::remove_file(hfile)?;
[INFO] [stderr]     |                           ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\helm\helpers.rs:70:54
[INFO] [stderr]    |
[INFO] [stderr] 70 |     let s = Command::new("helm").args(&args).status()?;
[INFO] [stderr]    |                                                      ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]   --> src\helm\helpers.rs:79:54
[INFO] [stderr]    |
[INFO] [stderr] 79 |     let s = Command::new("helm").args(&args).output()?;
[INFO] [stderr]    |                                                      ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]    |
[INFO] [stderr]    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]    = help: the following implementations were found:
[INFO] [stderr]              <Error as std::convert::From<&'a str>>
[INFO] [stderr]              <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]              <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]            and 9 others
[INFO] [stderr]    = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\kong.rs:142:35
[INFO] [stderr]     |
[INFO] [stderr] 142 |     let mut f = File::create(&pth)?;
[INFO] [stderr]     |                                   ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\kong.rs:143:30
[INFO] [stderr]     |
[INFO] [stderr] 143 |     write!(f, "{}\n", output)?;
[INFO] [stderr]     |                              ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\kong.rs:154:57
[INFO] [stderr]     |
[INFO] [stderr] 154 |     let s = Command::new("python3").args(&args).status()?;
[INFO] [stderr]     |                                                         ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\kong.rs:175:35
[INFO] [stderr]     |
[INFO] [stderr] 175 |     let mut f = File::create(&pth)?;
[INFO] [stderr]     |                                   ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error[E0277]: `?` couldn't convert the error to `Error`
[INFO] [stderr]    --> src\kong.rs:176:30
[INFO] [stderr]     |
[INFO] [stderr] 176 |     write!(f, "{}\n", output)?;
[INFO] [stderr]     |                              ^ the trait `std::convert::From<std::io::Error>` is not implemented for `Error`
[INFO] [stderr]     |
[INFO] [stderr]     = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait
[INFO] [stderr]     = help: the following implementations were found:
[INFO] [stderr]               <Error as std::convert::From<&'a str>>
[INFO] [stderr]               <Error as std::convert::From<ErrorKind>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::Error>>
[INFO] [stderr]               <Error as std::convert::From<reqwest::UrlError>>
[INFO] [stderr]             and 9 others
[INFO] [stderr]     = note: required by `std::convert::From::from`
[INFO] [stderr] 
[INFO] [stderr] error: aborting due to 31 previous errors
[INFO] [stderr] 
[INFO] [stderr] For more information about this error, try `rustc --explain E0277`.
[INFO] [stderr] error: Could not compile `shipcat`.
[INFO] [stderr] 
[INFO] [stderr] To learn more, run the command again with --verbose.
[INFO] running `"docker" "inspect" "e90bc6c32337cb15be7171b888440c795b44d6fb578398d7867cd918d0eecafe"`
[INFO] running `"docker" "rm" "-f" "e90bc6c32337cb15be7171b888440c795b44d6fb578398d7867cd918d0eecafe"`
[INFO] [stdout] e90bc6c32337cb15be7171b888440c795b44d6fb578398d7867cd918d0eecafe
