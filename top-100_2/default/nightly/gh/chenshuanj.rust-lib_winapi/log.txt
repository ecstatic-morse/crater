[INFO] cloning repository chenshuanj/rust-lib_winapi
[INFO] running `"git" "clone" "--bare" "git://github.com/chenshuanj/rust-lib_winapi.git" "work\\cache\\sources\\gh\\chenshuanj\\rust-lib_winapi"`
[INFO] [stderr] Cloning into bare repository 'work\cache\sources\gh\chenshuanj\rust-lib_winapi'...
[INFO] running `"git" "clone" "work\\cache\\sources\\gh\\chenshuanj\\rust-lib_winapi" "work\\ex\\default\\sources\\nightly\\gh\\chenshuanj\\rust-lib_winapi"`
[INFO] [stderr] Cloning into 'work\ex\default\sources\nightly\gh\chenshuanj\rust-lib_winapi'...
[INFO] [stderr] done.
[INFO] running `"git" "clone" "work\\cache\\sources\\gh\\chenshuanj\\rust-lib_winapi" "work\\ex\\default\\sources\\nightly+rustflags=-Zverbose\\gh\\chenshuanj\\rust-lib_winapi"`
[INFO] [stderr] Cloning into 'work\ex\default\sources\nightly+rustflags=-Zverbose\gh\chenshuanj\rust-lib_winapi'...
[INFO] [stderr] done.
[INFO] running `"git" "rev-parse" "HEAD"`
[INFO] [stdout] a876c14b14979ec3f808cac9705a361c4b912da9
[INFO] sha for GitHub repo chenshuanj/rust-lib_winapi: a876c14b14979ec3f808cac9705a361c4b912da9
[INFO] validating manifest of chenshuanj/rust-lib_winapi on toolchain nightly
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] validating manifest of chenshuanj/rust-lib_winapi on toolchain nightly+rustflags=-Zverbose
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "read-manifest" "--manifest-path" "Cargo.toml"`
[INFO] started frobbing chenshuanj/rust-lib_winapi
[INFO] finished frobbing chenshuanj/rust-lib_winapi
[INFO] frobbed toml for chenshuanj/rust-lib_winapi written to work\ex\default\sources\nightly\gh\chenshuanj\rust-lib_winapi\Cargo.toml
[INFO] started frobbing chenshuanj/rust-lib_winapi
[INFO] finished frobbing chenshuanj/rust-lib_winapi
[INFO] frobbed toml for chenshuanj/rust-lib_winapi written to work\ex\default\sources\nightly+rustflags=-Zverbose\gh\chenshuanj\rust-lib_winapi\Cargo.toml
[INFO] crate chenshuanj/rust-lib_winapi already has a lockfile, it will not be regenerated
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] [stderr] error: the lock file C:\Users\mackendy\src\crater\work\ex\default\sources\nightly\gh\chenshuanj\rust-lib_winapi\Cargo.lock needs to be updated but --locked was passed to prevent this
[INFO] the lockfile is outdated, regenerating it
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "generate-lockfile" "--manifest-path" "Cargo.toml" "-Zno-index-update"`
[INFO] [stderr]     Blocking waiting for file lock on package cache
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] running `"C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home\\bin\\cargo.exe" "+nightly" "fetch" "--locked" "--manifest-path" "Cargo.toml"`
[INFO] testing chenshuanj/rust-lib_winapi against nightly for default
[INFO] running `"docker" "create" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\target-dirs\\default\\worker-0\\nightly,dst=C:\\crater\\target" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\ex\\default\\sources\\nightly\\gh\\chenshuanj\\rust-lib_winapi,dst=C:\\crater\\workdir,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\cargo-home,dst=C:\\crater\\cargo-home,readonly" "--mount" "type=bind,src=C:\\Users\\mackendy\\src\\crater\\work\\local\\rustup-home,dst=C:\\crater\\rustup-home,readonly" "-e" "SOURCE_DIR=C:\\crater\\workdir" "-e" "CARGO_TARGET_DIR=C:\\crater\\target" "-e" "CARGO_INCREMENTAL=0" "-e" "RUST_BACKTRACE=full" "-e" "RUSTFLAGS=--cap-lints=allow" "-e" "CARGO_HOME=C:\\crater\\cargo-home" "-e" "RUSTUP_HOME=C:\\crater\\rustup-home" "-w" "C:\\crater\\workdir" "-m" "1536M" "--network" "none" "--isolation=process" "crates-build-env-windows" "C:\\crater\\cargo-home\\bin\\cargo" "+nightly" "build" "--frozen"`
[INFO] [stdout] a1737c3a777d9708cee7ad8ebc5398fd9f554571476c86d651b3d795a3a0263d
[INFO] running `"docker" "start" "-a" "a1737c3a777d9708cee7ad8ebc5398fd9f554571476c86d651b3d795a3a0263d"`
[INFO] [stderr]    Compiling winapi v0.3.7
[INFO] [stderr]    Compiling simplewindow v0.1.0 (C:\crater\workdir)
[INFO] [stderr] error[E0432]: unresolved imports `winapi::c_int`, `winapi::UINT`, `winapi::LPARAM`, `winapi::DWORD`, `winapi::POINT`, `winapi::LPMSG`, `winapi::LRESULT`, `winapi::HMENU`, `winapi::GWL_USERDATA`, `winapi::LPVOID`, `winapi::WS_OVERLAPPEDWINDOW`, `winapi::WS_VISIBLE`, `winapi::BS_PUSHBUTTON`, `winapi::WS_CHILD`, `winapi::WM_DESTROY`, `winapi::WM_CREATE`, `winapi::WM_COMMAND`, `winapi::CW_USEDEFAULT`, `winapi::HINSTANCE`, `winapi::HWND`, `winapi::LPCWSTR`, `winapi::WNDCLASSW`, `winapi::WPARAM`, `winapi::MSG`, `winapi::MB_OK`, `winapi::WS_BORDER`, `winapi::WS_VSCROLL`
[INFO] [stderr]   --> src\main.rs:10:14
[INFO] [stderr]    |
[INFO] [stderr] 10 | use winapi::{c_int, UINT, LPARAM, DWORD, POINT, LPMSG, LRESULT, HMENU, GWL_USERDATA, LPVOID,
[INFO] [stderr]    |              ^^^^^  ^^^^  ^^^^^^  ^^^^^  ^^^^^  ^^^^^  ^^^^^^^  ^^^^^  ^^^^^^^^^^^^  ^^^^^^ no `LPVOID` in the root
[INFO] [stderr]    |              |      |     |       |      |      |      |        |      |
[INFO] [stderr]    |              |      |     |       |      |      |      |        |      no `GWL_USERDATA` in the root
[INFO] [stderr]    |              |      |     |       |      |      |      |        no `HMENU` in the root
[INFO] [stderr]    |              |      |     |       |      |      |      no `LRESULT` in the root
[INFO] [stderr]    |              |      |     |       |      |      no `LPMSG` in the root
[INFO] [stderr]    |              |      |     |       |      no `POINT` in the root
[INFO] [stderr]    |              |      |     |       no `DWORD` in the root
[INFO] [stderr]    |              |      |     no `LPARAM` in the root
[INFO] [stderr]    |              |      no `UINT` in the root
[INFO] [stderr]    |              no `c_int` in the root
[INFO] [stderr] 11 |     WS_OVERLAPPEDWINDOW, WS_VISIBLE, BS_PUSHBUTTON, WS_CHILD, WM_DESTROY, WM_CREATE, WM_COMMAND,
[INFO] [stderr]    |     ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^
[INFO] [stderr] 12 |     CW_USEDEFAULT, HINSTANCE, HWND, LPCWSTR, WNDCLASSW, WPARAM, MSG, MB_OK, WS_BORDER, WS_VSCROLL
[INFO] [stderr]    |     ^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^  ^^^^^^^  ^^^^^^^^^  ^^^^^^  ^^^  ^^^^^  ^^^^^^^^^  ^^^^^^^^^^
[INFO] [stderr] 
[INFO] [stderr] error: aborting due to previous error
[INFO] [stderr] 
[INFO] [stderr] For more information about this error, try `rustc --explain E0432`.
[INFO] [stderr] error: Could not compile `simplewindow`.
[INFO] [stderr] 
[INFO] [stderr] To learn more, run the command again with --verbose.
[INFO] running `"docker" "inspect" "a1737c3a777d9708cee7ad8ebc5398fd9f554571476c86d651b3d795a3a0263d"`
[INFO] running `"docker" "rm" "-f" "a1737c3a777d9708cee7ad8ebc5398fd9f554571476c86d651b3d795a3a0263d"`
[INFO] [stdout] a1737c3a777d9708cee7ad8ebc5398fd9f554571476c86d651b3d795a3a0263d
